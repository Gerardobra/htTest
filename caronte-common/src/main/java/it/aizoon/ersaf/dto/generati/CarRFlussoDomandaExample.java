package it.aizoon.ersaf.dto.generati;

import it.aizoon.ersaf.dto.GenericExample;
import java.util.ArrayList;
import java.util.List;

public class CarRFlussoDomandaExample extends GenericExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public CarRFlussoDomandaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdFlussoIsNull() {
            addCriterion("id_flusso is null");
            return (Criteria) this;
        }

        public Criteria andIdFlussoIsNotNull() {
            addCriterion("id_flusso is not null");
            return (Criteria) this;
        }

        public Criteria andIdFlussoEqualTo(Long value) {
            addCriterion("id_flusso =", value, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoNotEqualTo(Long value) {
            addCriterion("id_flusso <>", value, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoGreaterThan(Long value) {
            addCriterion("id_flusso >", value, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoGreaterThanOrEqualTo(Long value) {
            addCriterion("id_flusso >=", value, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoLessThan(Long value) {
            addCriterion("id_flusso <", value, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoLessThanOrEqualTo(Long value) {
            addCriterion("id_flusso <=", value, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoIn(List<Long> values) {
            addCriterion("id_flusso in", values, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoNotIn(List<Long> values) {
            addCriterion("id_flusso not in", values, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoBetween(Long value1, Long value2) {
            addCriterion("id_flusso between", value1, value2, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdFlussoNotBetween(Long value1, Long value2) {
            addCriterion("id_flusso not between", value1, value2, "idFlusso");
            return (Criteria) this;
        }

        public Criteria andIdDomandaIsNull() {
            addCriterion("id_domanda is null");
            return (Criteria) this;
        }

        public Criteria andIdDomandaIsNotNull() {
            addCriterion("id_domanda is not null");
            return (Criteria) this;
        }

        public Criteria andIdDomandaEqualTo(Long value) {
            addCriterion("id_domanda =", value, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaNotEqualTo(Long value) {
            addCriterion("id_domanda <>", value, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaGreaterThan(Long value) {
            addCriterion("id_domanda >", value, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaGreaterThanOrEqualTo(Long value) {
            addCriterion("id_domanda >=", value, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaLessThan(Long value) {
            addCriterion("id_domanda <", value, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaLessThanOrEqualTo(Long value) {
            addCriterion("id_domanda <=", value, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaIn(List<Long> values) {
            addCriterion("id_domanda in", values, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaNotIn(List<Long> values) {
            addCriterion("id_domanda not in", values, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaBetween(Long value1, Long value2) {
            addCriterion("id_domanda between", value1, value2, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andIdDomandaNotBetween(Long value1, Long value2) {
            addCriterion("id_domanda not between", value1, value2, "idDomanda");
            return (Criteria) this;
        }

        public Criteria andProgressivoIsNull() {
            addCriterion("progressivo is null");
            return (Criteria) this;
        }

        public Criteria andProgressivoIsNotNull() {
            addCriterion("progressivo is not null");
            return (Criteria) this;
        }

        public Criteria andProgressivoEqualTo(Long value) {
            addCriterion("progressivo =", value, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoNotEqualTo(Long value) {
            addCriterion("progressivo <>", value, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoGreaterThan(Long value) {
            addCriterion("progressivo >", value, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoGreaterThanOrEqualTo(Long value) {
            addCriterion("progressivo >=", value, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoLessThan(Long value) {
            addCriterion("progressivo <", value, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoLessThanOrEqualTo(Long value) {
            addCriterion("progressivo <=", value, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoIn(List<Long> values) {
            addCriterion("progressivo in", values, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoNotIn(List<Long> values) {
            addCriterion("progressivo not in", values, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoBetween(Long value1, Long value2) {
            addCriterion("progressivo between", value1, value2, "progressivo");
            return (Criteria) this;
        }

        public Criteria andProgressivoNotBetween(Long value1, Long value2) {
            addCriterion("progressivo not between", value1, value2, "progressivo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated do_not_delete_during_merge Thu Jun 18 09:18:38 CEST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.car_r_flusso_domanda
     *
     * @mbg.generated Thu Jun 18 09:18:38 CEST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}