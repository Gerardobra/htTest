package it.aizoon.ersaf.dto.generati;

import it.aizoon.ersaf.dto.GenericExample;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CarTTraceLoginExample extends GenericExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public CarTTraceLoginExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdTraceLoginIsNull() {
            addCriterion("id_trace_login is null");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginIsNotNull() {
            addCriterion("id_trace_login is not null");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginEqualTo(Long value) {
            addCriterion("id_trace_login =", value, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginNotEqualTo(Long value) {
            addCriterion("id_trace_login <>", value, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginGreaterThan(Long value) {
            addCriterion("id_trace_login >", value, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginGreaterThanOrEqualTo(Long value) {
            addCriterion("id_trace_login >=", value, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginLessThan(Long value) {
            addCriterion("id_trace_login <", value, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginLessThanOrEqualTo(Long value) {
            addCriterion("id_trace_login <=", value, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginIn(List<Long> values) {
            addCriterion("id_trace_login in", values, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginNotIn(List<Long> values) {
            addCriterion("id_trace_login not in", values, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginBetween(Long value1, Long value2) {
            addCriterion("id_trace_login between", value1, value2, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdTraceLoginNotBetween(Long value1, Long value2) {
            addCriterion("id_trace_login not between", value1, value2, "idTraceLogin");
            return (Criteria) this;
        }

        public Criteria andIdUtenteIsNull() {
            addCriterion("id_utente is null");
            return (Criteria) this;
        }

        public Criteria andIdUtenteIsNotNull() {
            addCriterion("id_utente is not null");
            return (Criteria) this;
        }

        public Criteria andIdUtenteEqualTo(Long value) {
            addCriterion("id_utente =", value, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteNotEqualTo(Long value) {
            addCriterion("id_utente <>", value, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteGreaterThan(Long value) {
            addCriterion("id_utente >", value, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteGreaterThanOrEqualTo(Long value) {
            addCriterion("id_utente >=", value, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteLessThan(Long value) {
            addCriterion("id_utente <", value, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteLessThanOrEqualTo(Long value) {
            addCriterion("id_utente <=", value, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteIn(List<Long> values) {
            addCriterion("id_utente in", values, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteNotIn(List<Long> values) {
            addCriterion("id_utente not in", values, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteBetween(Long value1, Long value2) {
            addCriterion("id_utente between", value1, value2, "idUtente");
            return (Criteria) this;
        }

        public Criteria andIdUtenteNotBetween(Long value1, Long value2) {
            addCriterion("id_utente not between", value1, value2, "idUtente");
            return (Criteria) this;
        }

        public Criteria andDataInsertIsNull() {
            addCriterion("data_insert is null");
            return (Criteria) this;
        }

        public Criteria andDataInsertIsNotNull() {
            addCriterion("data_insert is not null");
            return (Criteria) this;
        }

        public Criteria andDataInsertEqualTo(Date value) {
            addCriterion("data_insert =", value, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertNotEqualTo(Date value) {
            addCriterion("data_insert <>", value, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertGreaterThan(Date value) {
            addCriterion("data_insert >", value, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertGreaterThanOrEqualTo(Date value) {
            addCriterion("data_insert >=", value, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertLessThan(Date value) {
            addCriterion("data_insert <", value, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertLessThanOrEqualTo(Date value) {
            addCriterion("data_insert <=", value, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertIn(List<Date> values) {
            addCriterion("data_insert in", values, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertNotIn(List<Date> values) {
            addCriterion("data_insert not in", values, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertBetween(Date value1, Date value2) {
            addCriterion("data_insert between", value1, value2, "dataInsert");
            return (Criteria) this;
        }

        public Criteria andDataInsertNotBetween(Date value1, Date value2) {
            addCriterion("data_insert not between", value1, value2, "dataInsert");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated do_not_delete_during_merge Fri Apr 27 16:41:05 CEST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.car_t_trace_login
     *
     * @mbg.generated Fri Apr 27 16:41:05 CEST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}