package it.aizoon.ersaf.dto.generati;

import it.aizoon.ersaf.dto.GenericExample;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CarTUploadTempExample extends GenericExample {
    /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  protected String orderByClause;
  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  protected boolean distinct;
  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  protected List<Criteria> oredCriteria;

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public CarTUploadTempExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    protected void addCriterionForJDBCDate(String condition, Date value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value.getTime()), property);
    }

    protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
      if (values == null || values.size() == 0) {
        throw new RuntimeException("Value list for " + property + " cannot be null or empty");
      }
      List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
      Iterator<Date> iter = values.iterator();
      while (iter.hasNext()) {
        dateList.add(new java.sql.Date(iter.next().getTime()));
      }
      addCriterion(condition, dateList, property);
    }

    protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
    }

    public Criteria andIdUploadTempIsNull() {
      addCriterion("id_upload_temp is null");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempIsNotNull() {
      addCriterion("id_upload_temp is not null");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempEqualTo(Long value) {
      addCriterion("id_upload_temp =", value, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempNotEqualTo(Long value) {
      addCriterion("id_upload_temp <>", value, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempGreaterThan(Long value) {
      addCriterion("id_upload_temp >", value, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempGreaterThanOrEqualTo(Long value) {
      addCriterion("id_upload_temp >=", value, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempLessThan(Long value) {
      addCriterion("id_upload_temp <", value, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempLessThanOrEqualTo(Long value) {
      addCriterion("id_upload_temp <=", value, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempIn(List<Long> values) {
      addCriterion("id_upload_temp in", values, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempNotIn(List<Long> values) {
      addCriterion("id_upload_temp not in", values, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempBetween(Long value1, Long value2) {
      addCriterion("id_upload_temp between", value1, value2, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andIdUploadTempNotBetween(Long value1, Long value2) {
      addCriterion("id_upload_temp not between", value1, value2, "idUploadTemp");
      return (Criteria) this;
    }

    public Criteria andNomeFileIsNull() {
      addCriterion("nome_file is null");
      return (Criteria) this;
    }

    public Criteria andNomeFileIsNotNull() {
      addCriterion("nome_file is not null");
      return (Criteria) this;
    }

    public Criteria andNomeFileEqualTo(String value) {
      addCriterion("nome_file =", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileNotEqualTo(String value) {
      addCriterion("nome_file <>", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileGreaterThan(String value) {
      addCriterion("nome_file >", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileGreaterThanOrEqualTo(String value) {
      addCriterion("nome_file >=", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileLessThan(String value) {
      addCriterion("nome_file <", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileLessThanOrEqualTo(String value) {
      addCriterion("nome_file <=", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileLike(String value) {
      addCriterion("nome_file like", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileNotLike(String value) {
      addCriterion("nome_file not like", value, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileIn(List<String> values) {
      addCriterion("nome_file in", values, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileNotIn(List<String> values) {
      addCriterion("nome_file not in", values, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileBetween(String value1, String value2) {
      addCriterion("nome_file between", value1, value2, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andNomeFileNotBetween(String value1, String value2) {
      addCriterion("nome_file not between", value1, value2, "nomeFile");
      return (Criteria) this;
    }

    public Criteria andDataUploadIsNull() {
      addCriterion("data_upload is null");
      return (Criteria) this;
    }

    public Criteria andDataUploadIsNotNull() {
      addCriterion("data_upload is not null");
      return (Criteria) this;
    }

    public Criteria andDataUploadEqualTo(Date value) {
      addCriterionForJDBCDate("data_upload =", value, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadNotEqualTo(Date value) {
      addCriterionForJDBCDate("data_upload <>", value, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadGreaterThan(Date value) {
      addCriterionForJDBCDate("data_upload >", value, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadGreaterThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("data_upload >=", value, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadLessThan(Date value) {
      addCriterionForJDBCDate("data_upload <", value, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadLessThanOrEqualTo(Date value) {
      addCriterionForJDBCDate("data_upload <=", value, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadIn(List<Date> values) {
      addCriterionForJDBCDate("data_upload in", values, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadNotIn(List<Date> values) {
      addCriterionForJDBCDate("data_upload not in", values, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("data_upload between", value1, value2, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andDataUploadNotBetween(Date value1, Date value2) {
      addCriterionForJDBCDate("data_upload not between", value1, value2, "dataUpload");
      return (Criteria) this;
    }

    public Criteria andNomeFileLikeInsensitive(String value) {
      addCriterion("upper(nome_file) like", value.toUpperCase(), "nomeFile");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table caronte.car_t_upload_temp
   * @mbg.generated  Wed Oct 31 16:30:01 CET 2018
   */
  public static class Criterion {
    private String condition;
    private Object value;
    private Object secondValue;
    private boolean noValue;
    private boolean singleValue;
    private boolean betweenValue;
    private boolean listValue;
    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.car_t_upload_temp
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 19 00:36:11 CEST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}