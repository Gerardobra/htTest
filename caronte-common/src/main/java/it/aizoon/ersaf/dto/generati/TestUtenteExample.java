package it.aizoon.ersaf.dto.generati;

import it.aizoon.ersaf.dto.GenericExample;
import java.util.ArrayList;
import java.util.List;

public class TestUtenteExample extends GenericExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public TestUtenteExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andLoginIsNull() {
			addCriterion("login is null");
			return (Criteria) this;
		}

		public Criteria andLoginIsNotNull() {
			addCriterion("login is not null");
			return (Criteria) this;
		}

		public Criteria andLoginEqualTo(String value) {
			addCriterion("login =", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginNotEqualTo(String value) {
			addCriterion("login <>", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginGreaterThan(String value) {
			addCriterion("login >", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginGreaterThanOrEqualTo(String value) {
			addCriterion("login >=", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginLessThan(String value) {
			addCriterion("login <", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginLessThanOrEqualTo(String value) {
			addCriterion("login <=", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginLike(String value) {
			addCriterion("login like", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginNotLike(String value) {
			addCriterion("login not like", value, "login");
			return (Criteria) this;
		}

		public Criteria andLoginIn(List<String> values) {
			addCriterion("login in", values, "login");
			return (Criteria) this;
		}

		public Criteria andLoginNotIn(List<String> values) {
			addCriterion("login not in", values, "login");
			return (Criteria) this;
		}

		public Criteria andLoginBetween(String value1, String value2) {
			addCriterion("login between", value1, value2, "login");
			return (Criteria) this;
		}

		public Criteria andLoginNotBetween(String value1, String value2) {
			addCriterion("login not between", value1, value2, "login");
			return (Criteria) this;
		}

		public Criteria andPasswordHashIsNull() {
			addCriterion("password_hash is null");
			return (Criteria) this;
		}

		public Criteria andPasswordHashIsNotNull() {
			addCriterion("password_hash is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordHashEqualTo(String value) {
			addCriterion("password_hash =", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashNotEqualTo(String value) {
			addCriterion("password_hash <>", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashGreaterThan(String value) {
			addCriterion("password_hash >", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashGreaterThanOrEqualTo(String value) {
			addCriterion("password_hash >=", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashLessThan(String value) {
			addCriterion("password_hash <", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashLessThanOrEqualTo(String value) {
			addCriterion("password_hash <=", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashLike(String value) {
			addCriterion("password_hash like", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashNotLike(String value) {
			addCriterion("password_hash not like", value, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashIn(List<String> values) {
			addCriterion("password_hash in", values, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashNotIn(List<String> values) {
			addCriterion("password_hash not in", values, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashBetween(String value1, String value2) {
			addCriterion("password_hash between", value1, value2, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andPasswordHashNotBetween(String value1, String value2) {
			addCriterion("password_hash not between", value1, value2, "passwordHash");
			return (Criteria) this;
		}

		public Criteria andNomeIsNull() {
			addCriterion("nome is null");
			return (Criteria) this;
		}

		public Criteria andNomeIsNotNull() {
			addCriterion("nome is not null");
			return (Criteria) this;
		}

		public Criteria andNomeEqualTo(String value) {
			addCriterion("nome =", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotEqualTo(String value) {
			addCriterion("nome <>", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeGreaterThan(String value) {
			addCriterion("nome >", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeGreaterThanOrEqualTo(String value) {
			addCriterion("nome >=", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeLessThan(String value) {
			addCriterion("nome <", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeLessThanOrEqualTo(String value) {
			addCriterion("nome <=", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeLike(String value) {
			addCriterion("nome like", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotLike(String value) {
			addCriterion("nome not like", value, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeIn(List<String> values) {
			addCriterion("nome in", values, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotIn(List<String> values) {
			addCriterion("nome not in", values, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeBetween(String value1, String value2) {
			addCriterion("nome between", value1, value2, "nome");
			return (Criteria) this;
		}

		public Criteria andNomeNotBetween(String value1, String value2) {
			addCriterion("nome not between", value1, value2, "nome");
			return (Criteria) this;
		}

		public Criteria andCognomeIsNull() {
			addCriterion("cognome is null");
			return (Criteria) this;
		}

		public Criteria andCognomeIsNotNull() {
			addCriterion("cognome is not null");
			return (Criteria) this;
		}

		public Criteria andCognomeEqualTo(String value) {
			addCriterion("cognome =", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotEqualTo(String value) {
			addCriterion("cognome <>", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeGreaterThan(String value) {
			addCriterion("cognome >", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeGreaterThanOrEqualTo(String value) {
			addCriterion("cognome >=", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeLessThan(String value) {
			addCriterion("cognome <", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeLessThanOrEqualTo(String value) {
			addCriterion("cognome <=", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeLike(String value) {
			addCriterion("cognome like", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotLike(String value) {
			addCriterion("cognome not like", value, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeIn(List<String> values) {
			addCriterion("cognome in", values, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotIn(List<String> values) {
			addCriterion("cognome not in", values, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeBetween(String value1, String value2) {
			addCriterion("cognome between", value1, value2, "cognome");
			return (Criteria) this;
		}

		public Criteria andCognomeNotBetween(String value1, String value2) {
			addCriterion("cognome not between", value1, value2, "cognome");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table caronte.test_utente
	 * @mbg.generated  Fri Nov 17 17:20:50 CET 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table caronte.test_utente
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 06 19:11:42 CET 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}