<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2013-2017 the original author or authors. Licensed under the 
	Apache License, Version 2.0 (the "License"); you may not use this file except 
	in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="it.aizoon.ersaf.integration.mybatis.mapper.UtenteMapper">
  <resultMap id="getUtenteResultMap" type="it.aizoon.ersaf.dto.UtenteDTO">
    <id column="id_utente" jdbcType="INTEGER" property="idUtente" />
    <result column="flEliminabile" jdbcType="BIT" property="flEliminabile" />
    <result column="flSuperUser" jdbcType="BIT" property="flSuperUser" />
    <result column="spedizionieriSecondari" jdbcType="VARCHAR" property="spedizionieriSecondari" />
    <result column="abilitato" jdbcType="BIT" property="abilitato" />
    <result column="codice_fiscale" jdbcType="CHAR" property="codiceFiscale" />
    <result column="cognome" jdbcType="VARCHAR" property="cognome" />
    <result column="nome" jdbcType="VARCHAR" property="nome" />
    <result column="telefono" jdbcType="VARCHAR" property="telefono" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="passwordImpostata" jdbcType="BIT" property="passwordImpostata" />
    <result column="id_spedizioniere" jdbcType="SMALLINT" property="idSpedizioniere" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="data_inserimento" jdbcType="DATE" property="dataInserimento" />
    <result column="data_update" jdbcType="DATE" property="dataUpdate" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="data_token" jdbcType="TIMESTAMP" property="dataToken" />
    <result column="denom_spedizioniere" jdbcType="VARCHAR" property="denomSpedizioniere" />
    <result column="modificato_admin" jdbcType="BIT" property="modificatoAdmin" />
    <result column="id_tipo_spedizioniere" jdbcType="SMALLINT" property="idTipoSpedizioniere" />
    <result column="id_ruolo" jdbcType="SMALLINT" property="idRuolo" />
    <result column="denom_ruolo" jdbcType="VARCHAR" property="denomRuolo" />
    <result column="cellulare" jdbcType="VARCHAR" property="cellulare" />
    <collection property="sezioni" ofType="it.aizoon.ersaf.dto.generati.CarDAssociazioneSezione">
	    <id column="id_associazione_sezione" property="idAssociazioneSezione"/>
	    <result column="descrAssociazioneSezione" jdbcType="VARCHAR" property="descAssociazioneSezione" />
	  </collection>	  
  </resultMap>
  
  <resultMap id="getSpedizioniereResultMap" type="it.aizoon.ersaf.dto.SpedizioniereDTO">
    <id column="id_spedizioniere" jdbcType="INTEGER" property="idSpedizioniere" />
    <result column="attivo" jdbcType="BIT" property="attivo" />
    <result column="flEliminabile" jdbcType="BIT" property="flEliminabile" />
    <result column="id_tipo_spedizioniere" jdbcType="SMALLINT" property="idTipoSpedizioniere" />
    <result column="denom_tipo_spedizioniere" jdbcType="VARCHAR" property="denomTipoSpedizioniere" />    
    <result column="denom_spedizioniere" jdbcType="VARCHAR" property="denomSpedizioniere" />
    <result column="nomeDitta" jdbcType="VARCHAR" property="nomeDitta" />
    <result column="cognomeDitta" jdbcType="VARCHAR" property="cognomeDitta" />     
    <result column="data_cancellazione" jdbcType="DATE" property="dataCancellazione" />
    <result column="data_insert" jdbcType="TIMESTAMP" property="dataInsert" />
    <result column="data_update" jdbcType="TIMESTAMP" property="dataUpdate" />
    <result column="id_utente_insert" jdbcType="SMALLINT" property="idUtenteInsert" />
    <result column="id_utente_update" jdbcType="SMALLINT" property="idUtenteUpdate" />
    <result column="id_comune" jdbcType="SMALLINT" property="idComuneSedeSociale" />
    <result column="id_provincia" jdbcType="SMALLINT" property="idProvinciaSedeSociale" />
    <result column="partita_iva" jdbcType="VARCHAR" property="partitaIVA" />
    <result column="codice_fiscale" jdbcType="VARCHAR" property="codiceFiscale" />
    <result column="telefono" jdbcType="VARCHAR" property="numeroTelefono" />
    <result column="cellulare" jdbcType="VARCHAR" property="numeroCellulare" />
    <result column="fax" jdbcType="VARCHAR" property="numeroFax" />
    <result column="codice_rup" jdbcType="VARCHAR" property="codiceRUP" />
    <result column="email" jdbcType="VARCHAR" property="emailSpedizioniere" />
    <result column="pec" jdbcType="VARCHAR" property="pec" />
    <result column="cap" jdbcType="CHAR" property="capSedeSociale" />
    <result column="indirizzo" jdbcType="VARCHAR" property="indirizzoSedeSociale" />
    <result column="motivo_richiesta" jdbcType="VARCHAR" property="motivoRichiesta" />
    <result column="cuaa" jdbcType="VARCHAR" property="cuaa" />
    <result column="autoriz_pagam_posticip" jdbcType="BIT" property="autorizPagamPosticip" />
    <result column="codice_ruop" jdbcType="VARCHAR" property="codiceRUOP" />
    <result column="modificato_admin" jdbcType="BIT" property="modificatoAdmin" />
    <result column="tipo_spedizioniere_altro" jdbcType="VARCHAR" property="tipoSpedizioniereAltro" />
    <result column="id_stato_azienda" jdbcType="VARCHAR" property="idStatoAzienda" />
    <result column="descStatoAzienda" jdbcType="VARCHAR" property="descStatoAzienda" />
    <result column="tipologiaAttivita" jdbcType="VARCHAR" property="tipologiaAttivita" />
    <result column="codiceFitok" jdbcType="VARCHAR" property="codiceFitok" />
    <result column="descCentroAz" jdbcType="VARCHAR" property="descCentroAz"/>
    <collection property="sezioni" ofType="it.aizoon.ersaf.dto.generati.CarDAssociazioneSezione">
      <id column="id_associazione_sezione" property="idAssociazioneSezione"/>
      <result column="desc_associazione_sezione" jdbcType="VARCHAR" property="descAssociazioneSezione" />
    </collection>    
  </resultMap>
  
  <resultMap id="getIspettoreResultMap" type="it.aizoon.ersaf.dto.IspettoreDTO">
    <id column="id_ispettore" jdbcType="INTEGER" property="idIspettore" />
    <result column="id_regione_servizio" jdbcType="SMALLINT" property="idRegioneServizio" />
    <result column="denom_regione" jdbcType="VARCHAR" property="denomRegioneServizio" />
    <result column="tipo_operazione" jdbcType="VARCHAR" property="tipoOperazione" />
    <result column="numero_tessera" jdbcType="VARCHAR" property="numeroTessera" />
    <result column="sesso" jdbcType="CHAR" property="sesso" />
    <result column="data_nascita" jdbcType="DATE" property="dataNascita" />
    <result column="id_nazione_nascita" jdbcType="SMALLINT" property="idNazioneNascita" />
    <result column="id_comune_nascita" jdbcType="SMALLINT" property="idComuneNascita" />
    <result column="titolo_studio" jdbcType="VARCHAR" property="titoloStudio" />
    <result column="indirizzo_ufficio" jdbcType="VARCHAR" property="indirizzoUfficio" />
    <result column="cap_ufficio" jdbcType="CHAR" property="capUfficio" />
    <result column="id_comune_ufficio" jdbcType="SMALLINT" property="idComuneUfficio" />
    <result column="attivo" jdbcType="BIT" property="attivo" />
    <result column="data_inizio" jdbcType="DATE" property="dataInizio" />
    <result column="data_fine" jdbcType="DATE" property="dataFine" />
    <result column="id_utente" jdbcType="SMALLINT" property="idUtente" />
    <result column="id_utente_insert" jdbcType="SMALLINT" property="idUtenteInsert" />
    <result column="data_insert" jdbcType="TIMESTAMP" property="dataInsert" />
    <result column="id_utente_update" jdbcType="SMALLINT" property="idUtenteUpdate" />
    <result column="data_update" jdbcType="TIMESTAMP" property="dataUpdate" />
    <result column="citta_nascita" jdbcType="VARCHAR" property="cittaNascita" />
    <result column="denom_comune_nascita" jdbcType="VARCHAR" property="denomComuneNascita" />
    <result column="denom_comune_ufficio" jdbcType="VARCHAR" property="denomComuneUfficio" />
    <result column="denom_nazione" jdbcType="VARCHAR" property="denomNazioneNascita" />
    <result column="abilitato" jdbcType="BIT" property="abilitato" />
    <result column="cognome" jdbcType="VARCHAR" property="cognome" />
    <result column="nome" jdbcType="VARCHAR" property="nome" />
    <result column="passwordImpostata" jdbcType="BIT" property="passwordImpostata" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="codice_fiscale" jdbcType="CHAR" property="codiceFiscale" />
    <result column="id_spedizioniere" jdbcType="SMALLINT" property="idSpedizioniere" />
    <result column="denom_spedizioniere" jdbcType="VARCHAR" property="denomSpedizioniere" />
    <result column="data_inserimento" jdbcType="DATE" property="dataInserimento" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="modificato_admin" jdbcType="BIT" property="modificatoAdmin" />
    <result column="id_ruolo" jdbcType="SMALLINT" property="idRuolo" />
    <result column="denom_ruolo" jdbcType="VARCHAR" property="denomRuolo" />
    <result column="tipo_ispettore" jdbcType="VARCHAR" property="tipoIspettore" />
    <collection property="sezioni" ofType="it.aizoon.ersaf.dto.generati.CarDAssociazioneSezione">
      <id column="id_associazione_sezione" property="idAssociazioneSezione"/>
      <result column="desc_associazione_sezione" jdbcType="VARCHAR" property="descAssociazioneSezione" />
    </collection>
  </resultMap>
  
  <sql id="getUtenteColumnList">
    ctu.id_utente,
    ctu.abilitato,
    UPPER(ctu.cognome) as cognome,
    UPPER(ctu.nome) as nome,
    ctu.telefono,
    UPPER(ctu.email) as email,
    UPPER(ctu.codice_fiscale) as codice_fiscale,
    ctu.id_spedizioniere,
    UPPER(cts.denom_spedizioniere) as denom_spedizioniere,
    ctu.data_inserimento,
    ctu.data_update,
    UPPER(ctu.note) as note,
    LENGTH(password) > 0 AS passwordImpostata,
    ctu.token,
    ctu.data_token,
    ctu.modificato_admin,
    cts.id_tipo_spedizioniere,
    ruolo.id_ruolo,
    ruolo.denom_ruolo,
    cdas.id_associazione_sezione,
    cdas.desc_associazione_sezione descrAssociazioneSezione,
    ctu.cellulare
  </sql>
  
  <sql id="getSpedizioniereColumnList">
    cts.id_spedizioniere,
    cts.attivo,
    cts.id_tipo_spedizioniere,
    UPPER(cdts.denom_tipo_spedizioniere) as denom_tipo_spedizioniere,
    UPPER(cts.denom_spedizioniere) as denom_spedizioniere,
    UPPER(cts.nome) as nomeDitta,
    UPPER(cts.cognome) as cognomeDitta,
    cts.data_cancellazione,
    cts.data_insert,
    cts.data_update,
    cts.id_utente_insert,
    cts.id_utente_update,
    cts.id_comune,
    ctd.id_provincia,
    cts.partita_iva,
    cts.codice_fiscale,
    cts.telefono,
    cts.cellulare,
    cts.fax,
    cts.codice_rup,
    UPPER(cts.email) as email,
    UPPER(cts.pec) as pec,
    cts.cap,
    UPPER(cts.indirizzo) as indirizzo,
    cts.motivo_richiesta,
    UPPER(cts.cuaa) as cuaa,
    cts.autoriz_pagam_posticip,
    cts.modificato_admin,
    cdas.id_associazione_sezione,
    cdas.desc_associazione_sezione,
    cts.codice_ruop as codiceRuop,
    cts.tipo_spedizioniere_altro,
    cts.data_registrazione_ruop,
    cts.id_stato_azienda,
    cdsa.desc_breve as descStatoAzienda,
    cdsa.desc_centro_az as descCentroAz,
    cts.tipologia_attivita as tipologiaAttivita, 
    coalesce(cts.codice_fitok, '') as codiceFitok
  </sql>
  
  <sql id="getIspettoreColumnList">
    cti.id_ispettore,
    cti.id_regione_servizio,
    cdr.denom_regione,
    cti.tipo_operazione,
    UPPER(cti.numero_tessera) as numero_tessera,
    cti.sesso,
    cti.data_nascita,
    cti.id_nazione_nascita,
    cti.id_comune_nascita,
    UPPER(cti.titolo_studio) as titolo_studio,
    UPPER(cti.indirizzo_ufficio) as indirizzo_ufficio,
    cti.cap_ufficio,
    cti.id_comune_ufficio,
    cti.attivo,
    cti.data_inizio,
    cti.data_fine,
    cti.id_utente_insert,
    cti.data_insert,
    cti.id_utente_update ,
    cti.id_utente,
    cti.data_update,
    cti.citta_nascita,
    cdd.denom_comune as denom_comune_nascita,
    cdd2.denom_comune as denom_comune_ufficio,
    cdn.denom_nazione,
    ctu.id_utente,
    ctu.abilitato,
    UPPER(ctu.cognome) as cognome,
    UPPER(ctu.nome) as nome,
    LENGTH(ctu.password) > 0 AS passwordImpostata,
    UPPER(ctu.email) as email,
    UPPER(ctu.codice_fiscale) as codice_fiscale,
    ctu.id_spedizioniere,
    UPPER(cts.denom_spedizioniere) as denom_spedizioniere,
    ctu.data_inserimento,
    UPPER(ctu.note) as note,
    ctu.modificato_admin,
    ruolo.id_ruolo,
    ruolo.denom_ruolo,
    cdas.id_associazione_sezione,
    cti.tipo_ispettore
  </sql>
  
	<!--select id="getUser" resultType="org.mybatis.cdi.samples.User"> select 
		* from users where id = #{id} </select -->
	<select id="getUtenteById" resultType="java.lang.String">
		SELECT DENOMINAZIONE
		FROM
		crnt_utente
		WHERE id_utente = #{idUtente}
	</select>

	<select id="getUtente" parameterType="java.lang.Long" resultMap="getUtenteResultMap">
		SELECT
		<include refid="getUtenteColumnList" />
		FROM car_t_utente ctu
		  INNER JOIN car_t_spedizioniere cts 
		    ON cts.id_spedizioniere = ctu.id_spedizioniere
		  INNER JOIN car_r_utente_gruppo crug 
		    ON crug.id_utente = ctu.id_utente
		  INNER JOIN car_d_gruppo cdg 
		    ON cdg.id_gruppo = crug.id_gruppo
		  INNER JOIN car_d_ruolo ruolo
        ON cdg.id_ruolo = ruolo.id_ruolo
      INNER JOIN car_d_associazione_sezione cdas 
        ON cdas.id_associazione_sezione = cdg.id_associazione_sezione
		<where>
			ctu.id_utente = #{idUtente}
		</where>
	</select>

	<select id="getUtenteIndividuale" parameterType="java.lang.Long"
		resultMap="getUtenteResultMap">
		SELECT DISTINCT
		ctu.cognome,
		ctu.nome
		FROM
		car_t_utente ctu
		<where>
			ctu.id_spedizioniere = #{idSpedizioniere}
			AND ctu.abilitato IS TRUE
		</where>
	</select>

	<select id="getElencoUtenti" parameterType="it.aizoon.ersaf.form.UtenteForm"
		resultMap="getUtenteResultMap">
		SELECT 
		(select (CASE WHEN count(*) = 0  THEN true ELSE false END) AS flEliminabile 
     from car_t_domanda where id_utente =ctu.id_utente),
     (CASE WHEN ruolo.id_ruolo = 3 or ruolo.id_ruolo = 4 THEN true ELSE false END) AS flSuperUser ,
     (select string_agg(distinct upper(spedizionieri.denom_spedizioniere),'; ') 
			     from car_r_utente_spedizionieri crus 
			  	inner join car_t_spedizioniere spedizionieri on spedizionieri.id_spedizioniere = crus.id_spedizioniere
			  	where crus.id_utente = ctu.id_utente) as spedizionieriSecondari, 
		<include refid="getUtenteColumnList" />
		FROM car_t_utente ctu
		  INNER JOIN car_r_utente_gruppo crug 
		    ON crug.id_utente = ctu.id_utente
		  INNER JOIN car_d_gruppo cdg 
		    ON cdg.id_gruppo = crug.id_gruppo
		  INNER JOIN car_d_ruolo ruolo
        ON cdg.id_ruolo = ruolo.id_ruolo
		  INNER JOIN car_t_spedizioniere cts ON
		    cts.id_spedizioniere = ctu.id_spedizioniere
		  INNER JOIN car_d_associazione_sezione cdas 
		    ON cdas.id_associazione_sezione = cdg.id_associazione_sezione
		<where>
			<if test="utenteForm.idRuolo != null">
				AND cdg.id_ruolo = #{utenteForm.idRuolo}
			</if>
			<if test="utenteForm.denomSpedizioniere != null">
				<bind name="denomSpedizioniere" value="'%' + utenteForm.denomSpedizioniere + '%'" />
				AND UPPER(cts.denom_spedizioniere) like UPPER(#{denomSpedizioniere})
			</if>
			<if test="utenteForm.abilitato != null">
				<if test="utenteForm.abilitato">AND ctu.abilitato = #{utenteForm.abilitato}</if>
			</if>
			<if test="utenteForm.cognomeNome != null">
				<bind name="cognomeNome" value="'%' + utenteForm.cognomeNome + '%'" />
				AND UPPER(ctu.cognome || ' ' || ctu.nome) like UPPER(#{cognomeNome})
			</if>
			<if test="utenteForm.codiceFiscale != null">
				<bind name="utenteForm.codiceFiscale" value="'%' + utenteForm.codiceFiscale + '%'" />
				AND UPPER(ctu.codice_fiscale) like
				UPPER(#{utenteForm.codiceFiscale})
			</if>
			<if test="utenteForm.email != null">
				<bind name="email" value="'%' + utenteForm.email + '%'" />
				AND UPPER(ctu.email) like UPPER(#{email})
			</if>
			<if
				test="utenteForm.dataInserimentoDa != null and  utenteForm.dataInserimentoA != null">
				AND ctu.data_inserimento BETWEEN
				#{utenteForm.dataInserimentoDa} AND #{utenteForm.dataInserimentoA}
			</if>
			<if
				test="utenteForm.dataInserimentoDa != null and  utenteForm.dataInserimentoA == null">
				AND ctu.data_inserimento >= #{utenteForm.dataInserimentoDa}
			</if>

			<if
				test="utenteForm.dataInserimentoDa == null and  utenteForm.dataInserimentoA != null">
				AND ctu.data_inserimento BETWEEN (select min(data_inserimento)
				from car_t_utente) AND #{utenteForm.dataInserimentoA}
			</if>
		</where>
		order by ctu.cognome, ctu.nome
	</select>

	<insert id="insertRUtenteGruppo" keyColumn="id_utente"
		keyProperty="utente.idUtente" parameterType="map"
		useGeneratedKeys="true">
		insert into car_r_utente_gruppo (
		  id_utente,
		  id_gruppo)
		SELECT #{utente.idUtente}, 
		        id_gruppo
    FROM car_d_gruppo
    WHERE id_ruolo = #{utente.idRuolo}
    AND id_associazione_sezione = #{idSezione}
	</insert>

	<delete id="deleteCarRUtenteGruppo" parameterType="it.aizoon.ersaf.form.UtenteForm">
		delete from car_r_utente_gruppo where id_utente =
		#{idUtente}
	</delete>

	<select id="getSpedizioniere" parameterType="java.lang.Long"
		resultMap="getSpedizioniereResultMap">
		SELECT
		<include refid="getSpedizioniereColumnList" />
		FROM car_t_spedizioniere cts
		  INNER JOIN car_d_tipo_spedizioniere cdts 
		    ON cdts.id_tipo_spedizioniere = cts.id_tipo_spedizioniere
		  LEFT JOIN car_d_comune ctd 
		    ON ctd.id_comune = cts.id_comune
		  INNER JOIN car_r_spediz_assoc_sezione AS spedizione_sezione
        ON cts.id_spedizioniere = spedizione_sezione.id_spedizioniere
      INNER JOIN car_d_associazione_sezione cdas 
        ON cdas.id_associazione_sezione = spedizione_sezione.id_associazione_sezione
        INNER JOIN car_d_stato_azienda cdsa 
          	ON cdsa.id_stato_azienda = cts.id_stato_azienda
		<where>
			cts.id_spedizioniere = #{idSpedizioniere}
		</where>
	</select>

	<select id="getSpedizioniereByCuua" parameterType="java.lang.String"
		resultMap="getSpedizioniereResultMap">
		SELECT DISTINCT
			<include refid="getSpedizioniereColumnList" />
		FROM car_t_spedizioniere cts
		  INNER JOIN car_d_tipo_spedizioniere cdts 
		    ON cdts.id_tipo_spedizioniere = cts.id_tipo_spedizioniere
		  LEFT JOIN car_d_comune ctd 
		    ON ctd.id_comune = cts.id_comune
		  left outer  join car_r_spediz_assoc_sezione as spedizione_sezione on
				cts.id_spedizioniere = spedizione_sezione.id_spedizioniere
		  left outer join car_d_associazione_sezione cdas on
				cdas.id_associazione_sezione = spedizione_sezione.id_associazione_sezione
		  INNER JOIN car_d_stato_azienda cdsa 
          	ON cdsa.id_stato_azienda = cts.id_stato_azienda	
		<where>
			UPPER(cts.cuaa) = UPPER(#{cuaa})
		</where>
		order by cts.id_spedizioniere
	</select>
	
	<select id="getElencoSpedizionieri" parameterType="it.aizoon.ersaf.form.SpedizioniereForm"
		resultMap="getSpedizioniereResultMap">
		SELECT 
		(select (CASE WHEN count(*) =0  THEN true ELSE false END) 
	     from car_t_centro_aziendale ctca where ctca.id_spedizioniere=cts.id_spedizioniere) and 
	     (select (CASE WHEN count(*) =0  THEN true ELSE false END) 
	     from car_t_utente ctu where ctu.id_spedizioniere=cts.id_spedizioniere) AS flEliminabile ,
		<include refid="getSpedizioniereColumnList" />
		FROM car_t_spedizioniere cts
		  INNER JOIN car_d_tipo_spedizioniere cdts 
		    ON cdts.id_tipo_spedizioniere = cts.id_tipo_spedizioniere
		  LEFT JOIN car_d_comune ctd 
		    ON ctd.id_comune = cts.id_comune
		  INNER JOIN car_r_spediz_assoc_sezione AS spedizione_sezione
        	ON cts.id_spedizioniere = spedizione_sezione.id_spedizioniere
      	  INNER JOIN car_d_associazione_sezione cdas 
        	ON cdas.id_associazione_sezione = spedizione_sezione.id_associazione_sezione
          INNER JOIN car_d_stato_azienda cdsa 
          	ON cdsa.id_stato_azienda = cts.id_stato_azienda
			<where>
			<if test="spedizioniereForm.idStatoAzienda != null">
				AND cts.id_stato_azienda =
				#{spedizioniereForm.idStatoAzienda}
			</if>
			<if test="spedizioniereForm.denomSpedizioniere != null">
				<bind name="denomSpedizioniere" value="'%' + spedizioniereForm.denomSpedizioniere + '%'" />
				AND UPPER(cts.denom_spedizioniere) like UPPER(#{denomSpedizioniere})
			</if>
			<if test="spedizioniereForm.idTipoSpedizioniere != null">
				AND cts.id_tipo_spedizioniere =
				#{spedizioniereForm.idTipoSpedizioniere}
			</if>
			<if
				test="spedizioniereForm.dataInserimentoDa != null and  spedizioniereForm.dataInserimentoA != null">
				AND cts.data_insert BETWEEN
				#{spedizioniereForm.dataInserimentoDa} AND
				#{spedizioniereForm.dataInserimentoA}
			</if>
			<if
				test="spedizioniereForm.dataInserimentoDa != null and spedizioniereForm.dataInserimentoA == null">
				AND cts.data_insert >= #{spedizioniereForm.dataInserimentoDa}
			</if>
			<if
				test="spedizioniereForm.dataInserimentoDa == null and  spedizioniereForm.dataInserimentoA != null">
				AND cts.data_insert BETWEEN (select min(data_insert)
				from
				car_t_spedizioniere) AND #{spedizioniereForm.dataInserimentoA}
			</if>
			</where>
		

	</select>

	<select id="getIspettore" parameterType="java.lang.Long" resultMap="getIspettoreResultMap">
		SELECT 
		<include refid="getIspettoreColumnList" />
		FROM car_t_ispettore cti
	    LEFT JOIN car_d_comune cdd2 
	      ON cdd2.id_comune = cti.id_comune_ufficio
	    LEFT JOIN car_d_regione cdr 
	      ON cdr.id_regione = cti.id_regione_servizio
	    LEFT JOIN car_d_nazione cdn 
	      ON cdn.id_nazione = cti.id_nazione_nascita
	    LEFT JOIN car_d_comune cdd 
	      ON cdd.id_comune = cti.id_comune_nascita
	    INNER JOIN car_t_utente ctu 
	      ON ctu.id_utente = cti.id_utente
	    INNER JOIN car_r_utente_gruppo crug 
	      ON crug.id_utente = ctu.id_utente
	    INNER JOIN car_d_gruppo cdg 
	      ON cdg.id_gruppo = crug.id_gruppo
	    INNER JOIN car_d_ruolo ruolo
	      ON cdg.id_ruolo = ruolo.id_ruolo
	    INNER JOIN car_t_spedizioniere cts 
	      ON cts.id_spedizioniere = ctu.id_spedizioniere
	    INNER JOIN car_d_associazione_sezione cdas 
        ON cdas.id_associazione_sezione = cdg.id_associazione_sezione
		<where>
			cti.id_ispettore = #{idIspettore}
		</where>
	</select>

	<select id="getElencoIspettori" parameterType="it.aizoon.ersaf.form.IspettoreForm"
	  resultMap="getIspettoreResultMap">
		SELECT 
		<include refid="getIspettoreColumnList" />
		FROM car_t_ispettore cti
	    LEFT JOIN car_d_comune cdd2 
	      ON cdd2.id_comune = cti.id_comune_ufficio
	    LEFT JOIN car_d_regione cdr ON cdr.id_regione = cti.id_regione_servizio
	    LEFT JOIN car_d_nazione cdn ON cdn.id_nazione = cti.id_nazione_nascita
	    LEFT JOIN car_d_comune cdd ON cdd.id_comune = cti.id_comune_nascita
	    INNER JOIN car_t_utente ctu ON ctu.id_utente = cti.id_utente
	    INNER JOIN car_r_utente_gruppo crug ON crug.id_utente = ctu.id_utente
	    INNER JOIN car_d_gruppo cdg 
        ON cdg.id_gruppo = crug.id_gruppo
	    INNER JOIN car_d_ruolo ruolo
        ON cdg.id_ruolo = ruolo.id_ruolo
	    INNER JOIN car_t_spedizioniere cts 
        ON cts.id_spedizioniere = ctu.id_spedizioniere
	    INNER JOIN car_d_associazione_sezione cdas 
        ON cdas.id_associazione_sezione = cdg.id_associazione_sezione
		<where>
			<if test="ispettoreForm.idRuolo != null">
				AND cdg.id_ruolo = #{ispettoreForm.idRuolo}
			</if>
			<if test="ispettoreForm.abilitato != null">
				<if test="ispettoreForm.abilitato">AND cti.attivo = #{ispettoreForm.abilitato}</if>
			</if>
			<if test="ispettoreForm.numeroTessera != null">
				<bind name="ispettoreForm.numeroTessera" value="'%' + ispettoreForm.numeroTessera + '%'" />
				AND UPPER(cti.numero_tessera) like
				UPPER(#{ispettoreForm.numeroTessera})
			</if>
			<if test="ispettoreForm.denomSpedizioniere != null">
				<bind name="denomSpedizioniere" value="'%' + ispettoreForm.denomSpedizioniere + '%'" />
				AND UPPER(cts.denom_spedizioniere) like UPPER(#{denomSpedizioniere})
			</if>
			<if test="ispettoreForm.cognomeNome != null">
				<bind name="cognomeNome" value="'%' + ispettoreForm.cognomeNome + '%'" />
				AND UPPER(ctu.cognome || ' ' || ctu.nome) like UPPER(#{cognomeNome})
			</if>
			<if test="ispettoreForm.codiceFiscale != null">
				<bind name="codiceFiscale" value="'%' + ispettoreForm.codiceFiscale + '%'" />
				AND UPPER(ctu.codice_fiscale) like UPPER(#{codiceFiscale})
			</if>
			<if test="ispettoreForm.email != null">
				<bind name="email" value="'%' + ispettoreForm.email + '%'" />
				AND UPPER(ctu.email) like UPPER(#{email})
			</if>
			<if
				test="ispettoreForm.dataInserimentoDa != null and  ispettoreForm.dataInserimentoA != null">
				AND cti.data_insert BETWEEN
				#{ispettoreForm.dataInserimentoDa}
				AND #{ispettoreForm.dataInserimentoA}
			</if>
			<if
				test="ispettoreForm.dataInserimentoDa != null and  ispettoreForm.dataInserimentoA == null">
				AND cti.data_insert >= #{ispettoreForm.dataInserimentoDa}
			</if>
			<if
				test="ispettoreForm.dataInserimentoDa == null and  ispettoreForm.dataInserimentoA != null">
				AND cti.data_insert BETWEEN (select min(data_insert)
				from
				car_t_ispettore) AND #{ispettoreForm.dataInserimentoA}
			</if>
		</where>

	</select>

	<select id="getListaIspettoriRichiesta" resultType="it.aizoon.ersaf.dto.IspettoreDTO">
		SELECT
		ispettore.id_ispettore, ispettore.numero_tessera, utente.nome,
		utente.cognome
		FROM car_T_ispettore ispettore
		  INNER JOIN car_t_utente utente
		    ON ispettore.id_utente = utente.id_utente
		WHERE ispettore.attivo IS TRUE
		ORDER BY UPPER(nome), UPPER(cognome)
	</select>

	<select id="countMail" parameterType="it.aizoon.ersaf.form.UtenteForm"
		resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM car_t_utente
		<where>
			UPPER(email)=UPPER(#{email})
			<if test="idUtente != null">
				AND id_utente != #{idUtente}
			</if>
		</where>
	</select>
	
	<select id="countCF" parameterType="it.aizoon.ersaf.form.UtenteForm"
    resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM car_t_utente
    <where>
      UPPER(codice_fiscale) = UPPER(#{codiceFiscale})
      <if test="idUtente != null">
        AND id_utente != #{idUtente}
      </if>
      <if test="email != null and email != ''">
        AND UPPER(email) != UPPER(#{email})
      </if> 
    </where>
  </select>

	<select id="countDenomSpedizioniere" parameterType="it.aizoon.ersaf.form.SpedizioniereForm"
		resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM car_t_spedizioniere
		<where>
			UPPER(denom_spedizioniere)=UPPER(#{denomSpedizioniere})
			<if test="idSpedizioniere != null">
				AND id_spedizioniere!= #{idSpedizioniere}
			</if>
		</where>
	</select>

	<update id="updateIdUtenteInsertDelloSpedizioniere"
		parameterType="it.aizoon.ersaf.form.SpedizioniereForm">
		update car_t_spedizioniere set id_utente_insert =
		#{idUtente}
		where id_spedizioniere = #{idSpedizioniere}
	</update>

	<insert id="insertSpedizioniereRegistrazione" keyColumn="id_spedizioniere"
		keyProperty="idSpedizioniere" parameterType="it.aizoon.ersaf.form.SpedizioniereForm"
		useGeneratedKeys="true">
		insert into car_t_spedizioniere (cuaa,
		denom_spedizioniere, codice_rup, id_tipo_spedizioniere,
		codice_fiscale, partita_iva, indirizzo, cap, id_comune, email,
		telefono, autoriz_pagam_posticip, id_associazione_sezione, attivo,
		data_cancellazione, id_utente_insert, data_insert)
		values (#{cuaa},
		#{denomSpedizioniere}, #{codiceRUP}, #{idTipoSpedizioniere},
		#{codiceFiscale}, #{partitaIVA}, #{indirizzoSedeSociale},
		#{capSedeSociale}, #{idComuneSedeSociale}, #{emailSpedizioniere},
		#{numeroTelefono}, null, 1, false, null, null, #{dataInsert})
	</insert>


	<select id="getUtenteByToken" parameterType="java.lang.String"
		resultType="it.aizoon.ersaf.dto.UtenteDTO">
		SELECT DISTINCT
		ctu.id_utente,
		ctu.abilitato,
		ctu.cognome,
		ctu.nome,
		ctu.email,
		ctu.codice_fiscale,
		ctu.id_spedizioniere,
		ctu.data_inserimento,
		ctu.note,
		ctu.password,
		ctu.token,
		ctu.data_token
		FROM
		car_t_utente ctu
		<where>
			ctu.token = #{token}
		</where>
	</select>


	<select id="getElencoIspettoriFornituraDati" parameterType="java.util.ArrayList"
		resultType="it.aizoon.ersaf.dto.IspettoreDTO">
		SELECT CTI.ID_ISPETTORE,
		CDR.COD_ISTAT_REGIONE AS codRegioneServizio,
		(CASE WHEN CTI.DATA_FINE IS NULL THEN 'I' ELSE 'C' END) AS tipoOperazione,
		CTI.NUMERO_TESSERA AS numeroTessera,
		CTI.DATA_INIZIO AS dataInizio,
		CTI.DATA_FINE AS dataFine,
		CTU.CODICE_FISCALE AS codiceFiscale,
		CTU.COGNOME AS cognome,
		CTU.NOME AS nome,
		CTI.SESSO AS sesso,
		CTI.DATA_NASCITA AS dataNascita,
		CDC.COD_ISTAT_COMUNE AS codComuneNascita,
		COALESCE(CDC.DENOM_COMUNE,CTI.CITTA_NASCITA) AS denomComuneNascita,
		CDP.SIGLA_PROVINCIA AS codProvinciaNascita,
		CDN.COD_NAZIONE AS codNazioneNascita,
		CTI.TITOLO_STUDIO AS titoloStudio,
		CTI.INDIRIZZO_UFFICIO AS indirizzoUfficio,
		CTI.CAP_UFFICIO AS capUfficio,
		CDCU.COD_ISTAT_COMUNE AS codComuneUfficio,
		CDCU.DENOM_COMUNE AS denomComuneUfficio,
		CDPU.DENOM_PROVINCIA denomProvinciaUfficio,
		CDPU.SIGLA_PROVINCIA codProvinciaUfficio
		FROM CAR_T_ISPETTORE CTI
		LEFT JOIN CAR_D_REGIONE CDR ON CDR.ID_REGIONE = CTI.ID_REGIONE_SERVIZIO
		LEFT JOIN CAR_T_UTENTE CTU ON CTU.ID_UTENTE = CTI.ID_UTENTE
		LEFT JOIN CAR_D_COMUNE CDC ON CDC.ID_COMUNE = CTI.ID_COMUNE_NASCITA
		LEFT JOIN CAR_D_COMUNE CDCU ON CDCU.ID_COMUNE = CTI.ID_COMUNE_UFFICIO
		LEFT JOIN CAR_D_PROVINCIA CDP ON CDP.ID_PROVINCIA = CDC.ID_PROVINCIA
		LEFT JOIN CAR_D_NAZIONE CDN ON CDN.ID_NAZIONE = CTI.ID_NAZIONE_NASCITA
		LEFT JOIN CAR_D_PROVINCIA CDPU ON CDPU.ID_PROVINCIA =
		CDCU.ID_PROVINCIA
		<where>
			CTI.ID_ISPETTORE IN 
			<foreach item="item" index="index" collection="list"
             open="(" separator="," close=")">#{item}
   			 </foreach>
		</where>
	</select>
	
	<select id="getIdRegioneByIdProvincia" parameterType="java.lang.Long"
		resultType="java.lang.Long">
		SELECT id_regione
		FROM car_d_provincia
		<where>
			id_provincia = #{idProvincia}
		</where>
	</select>
	
	<select id="getIdProvinciaByIdComune" parameterType="java.lang.Long"
		resultType="java.lang.Long">
		SELECT id_provincia
		FROM car_d_comune
		<where>
			id_comune = #{idComune}
		</where>
	</select>

	<select id="getIdUtenteByEmail" parameterType="java.lang.String"
		resultType="java.lang.Long">
		SELECT id_utente
		FROM car_t_utente
		<where>
			upper(email) = upper(#{email})
		</where>
	</select>

  <select id="getElencoUtentiNonIspettori" parameterType="it.aizoon.ersaf.form.UtenteForm" resultType="it.aizoon.ersaf.dto.UtenteDTO">
		select distinct
		  ctu.id_utente,
		  ruolo.id_ruolo  
		FROM 
		  car_t_utente ctu
		  INNER JOIN car_r_utente_gruppo crug  ON crug.id_utente = ctu.id_utente
		  INNER JOIN car_d_gruppo cdg ON cdg.id_gruppo = crug.id_gruppo
		  INNER JOIN car_d_ruolo ruolo ON cdg.id_ruolo = ruolo.id_ruolo		
		WHERE
			ctu.id_spedizioniere = #{idSpedizioniere}
			and ctu.id_utente not in (select id_utente from car_t_ispettore)
		UNION
		SELECT 
		  utente.id_utente,
		  ruolo.id_ruolo
		FROM
		   car_r_utente_spedizionieri utSped
		   inner join car_t_utente utente on utente.id_utente = utSped.id_utente 
		   INNER JOIN car_r_utente_gruppo utenteGruppo ON utenteGruppo.id_utente = utente.id_utente
		   INNER JOIN car_d_gruppo gruppo ON gruppo.id_gruppo = utenteGruppo.id_gruppo
		   INNER JOIN car_d_ruolo ruolo ON gruppo.id_ruolo = ruolo.id_ruolo
		WHERE   
		  utSped.id_spedizioniere = #{idSpedizioniere}
		order by id_utente
  </select>
	
		<select id="getIdIspettoreByIdUtente" resultType="java.lang.Long">
		SELECT ID_ISPETTORE
		FROM
		car_t_ispettore
		<where>
			id_utente = #{idUtente}
		</where>
	</select>
	
	<select id="getSpedizioniereByPartitaIva" parameterType="java.lang.String"
		resultMap="getSpedizioniereResultMap">
		SELECT DISTINCT
			<include refid="getSpedizioniereColumnList" />
		FROM car_t_spedizioniere cts
		  INNER JOIN car_d_tipo_spedizioniere cdts 
		    ON cdts.id_tipo_spedizioniere = cts.id_tipo_spedizioniere
		  LEFT JOIN car_d_comune ctd 
		    ON ctd.id_comune = cts.id_comune
		  left outer  join car_r_spediz_assoc_sezione as spedizione_sezione on
				cts.id_spedizioniere = spedizione_sezione.id_spedizioniere
		  left outer join car_d_associazione_sezione cdas on
				cdas.id_associazione_sezione = spedizione_sezione.id_associazione_sezione	
		  left outer JOIN car_d_stato_azienda cdsa 
          	ON cdsa.id_stato_azienda = cts.id_stato_azienda
		<where>
			cts.partita_iva = #{partitaIva}
		</where>
		order by cts.id_spedizioniere
	</select>
	
	<select id="getIdRuoloByIdUtente" resultType="java.lang.Long">
		 select distinct gruppo.id_ruolo 
		   from 
		     car_d_gruppo gruppo
		   where 
		      gruppo.id_gruppo in(
				   select utGr.id_gruppo 
				   from car_r_utente_gruppo utGr
				   where id_utente = #{idUtente}
 			)
	</select>
	
</mapper>